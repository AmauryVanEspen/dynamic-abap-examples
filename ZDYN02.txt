
report zdyn02.

type-pools abap.

* text-tb1 = 'Operação'.
* text-tb2 = 'Dados da carga'.
* text-tb3 = 'Cláusula where'.

selection-screen begin of block b1 with frame title text-tb1.
parameter download type c radiobutton group op default 'X' user-command tb.
parameter upload   type c radiobutton group op.
selection-screen end of block b1.

selection-screen begin of block b2 with frame title text-tb2.
parameter table type dd02v-tabname.
selection-screen end of block b2.

selection-screen begin of block b3 with frame title text-tb3.
parameter where(100) type c.
selection-screen end of block b3.

at selection-screen output.

  loop at screen.
    if screen-name = 'WHERE' or screen-name = '%_WHERE_%_APP_%-TEXT'.
      case 'X'.
        when download.
          screen-input = 1.
          screen-invisible = 0.
        when upload.
          screen-input = 0.
          screen-invisible = 1.
          clear where.
      endcase.
      modify screen.
    endif.
  endloop.

*&---------------------------------------------------------------------*
*&      Form  check_dbtab_existance
*&---------------------------------------------------------------------*
form check_dbtab_existance.

  data l_count type sy-dbcnt.

  select count(*) from dd02v into l_count
    where tabname  eq table
      and tabclass eq 'TRANSP'.

  if sy-subrc ne 0.
    message 'A tabela informada não é válida.' type 'E'.
  endif.

endform.                    "check_dbtab_existance

*&---------------------------------------------------------------------*
*&      Form  create_rtts_objects
*&---------------------------------------------------------------------*
form create_rtts_objects using table_name type string
                               table_key  type abap_keydescr_tab
                      changing data_table type ref to data.

  data r_line_type type ref to cl_abap_structdescr.

  data r_type type ref to cl_abap_tabledescr.

  r_line_type ?= cl_abap_typedescr=>describe_by_name( table_name ).

  call method cl_abap_tabledescr=>create
    exporting
      p_line_type  = r_line_type
      p_table_kind = cl_abap_tabledescr=>tablekind_std
      p_unique     = space
      p_key        = table_key
    receiving
      p_result     = r_type.

  create data data_table type handle r_type.

endform.                    "create_rtts_objects

*&---------------------------------------------------------------------*
*&      Form  get_dbtab_keyflds
*&---------------------------------------------------------------------*
form get_dbtab_keyflds changing table_key type abap_keydescr_tab.

  data : begin of t_dd03l occurs 0,
           fieldname type dd03l-fieldname,
         end of t_dd03l.

  select fieldname from dd03l into table t_dd03l
    where tabname eq table
      and keyflag eq 'X'.

  data l_table_key type line of abap_keydescr_tab.

  loop at t_dd03l.
    check t_dd03l-fieldname ne '.INCLUDE'.
    l_table_key-name = t_dd03l-fieldname.
    append l_table_key to table_key.
  endloop.

  sort table_key.

  delete adjacent duplicates from table_key.

endform.                    "get_dbtab_keyflds

start-of-selection.

* verifica se a tabela existe
  perform check_dbtab_existance.

* obtém os campos-chave da tabela
  data t_table_key type abap_keydescr_tab.
  perform get_dbtab_keyflds changing t_table_key.

* constrói RTTS
  data l_table_name type string.
  data d_table type ref to data.
  field-symbols <table_data> type any table.

  l_table_name = table.
  perform create_rtts_objects using l_table_name t_table_key changing d_table.
  assign d_table->* to <table_data>.
  check sy-subrc is initial.

* faz a interação com o arquivo

  data l_rc type i.

  data l_file type line of filetable.

  data l_dummy1 type string.

  data l_dummy2 type string.

  data l_fullpath type string.

  data t_file_table type filetable.

  case 'X'.

    when download.

      if not where is initial.
        select * from (l_table_name) into table <table_data> where (where).
      else.
        select * from (l_table_name) into table <table_data>.
      endif.

      if sy-subrc ne 0.
        message 'Não foram encontrados resultados na tabela.' type 'E'.
      endif.

      clear : l_dummy1, l_dummy2, l_fullpath.

      call method cl_gui_frontend_services=>file_save_dialog
        exporting
          default_extension    = 'TXT'
        changing
          filename             = l_dummy1
          path                 = l_dummy2
          fullpath             = l_fullpath
        exceptions
          cntl_error           = 1
          error_no_gui         = 2
          not_supported_by_gui = 3
          others               = 4.

      if sy-subrc <> 0.
        message id sy-msgid type sy-msgty number sy-msgno
                   with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      endif.

      check not l_fullpath is initial.

      call method cl_gui_frontend_services=>gui_download
        exporting
          filename                = l_fullpath
          write_field_separator   = 'X'
        changing
          data_tab                = <table_data>
        exceptions
          file_write_error        = 1
          no_batch                = 2
          gui_refuse_filetransfer = 3
          invalid_type            = 4
          no_authority            = 5
          unknown_error           = 6
          header_not_allowed      = 7
          separator_not_allowed   = 8
          filesize_not_allowed    = 9
          header_too_long         = 10
          dp_error_create         = 11
          dp_error_send           = 12
          dp_error_write          = 13
          unknown_dp_error        = 14
          access_denied           = 15
          dp_out_of_memory        = 16
          disk_full               = 17
          dp_timeout              = 18
          file_not_found          = 19
          dataprovider_exception  = 20
          control_flush_error     = 21
          not_supported_by_gui    = 22
          error_no_gui            = 23
          others                  = 24.

    when upload.

      clear : l_dummy1, l_dummy2, l_fullpath.

      call method cl_gui_frontend_services=>file_open_dialog
        exporting
          default_extension       = 'TXT'
          multiselection          = space
        changing
          file_table              = t_file_table
          rc                      = l_rc
        exceptions
          file_open_dialog_failed = 1
          cntl_error              = 2
          error_no_gui            = 3
          not_supported_by_gui    = 4
          others                  = 5.

      if sy-subrc <> 0.
        message id sy-msgid type sy-msgty number sy-msgno
                   with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      endif.

      check not t_file_table[] is initial.

      read table t_file_table index 1 into l_file.

      l_fullpath = l_file-filename.

      call method cl_gui_frontend_services=>gui_upload
        exporting
          filename                = l_fullpath
          has_field_separator     = 'X'
        changing
          data_tab                = <table_data>
        exceptions
          file_open_error         = 1
          file_read_error         = 2
          no_batch                = 3
          gui_refuse_filetransfer = 4
          invalid_type            = 5
          no_authority            = 6
          unknown_error           = 7
          bad_data_format         = 8
          header_not_allowed      = 9
          separator_not_allowed   = 10
          header_too_long         = 11
          unknown_dp_error        = 12
          access_denied           = 13
          dp_out_of_memory        = 14
          disk_full               = 15
          dp_timeout              = 16
          not_supported_by_gui    = 17
          error_no_gui            = 18
          others                  = 19.

      if sy-subrc <> 0.
        message id sy-msgid type sy-msgty number sy-msgno
                   with sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      endif.

      if <table_data>[] is initial.
        message 'O arquivo está vazio.' type 'E'.
      else.
        modify (l_table_name) from table <table_data>.
      endif.

  endcase.